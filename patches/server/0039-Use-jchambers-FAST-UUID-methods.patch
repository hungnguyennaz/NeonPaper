From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Softik Lord <dimap9986@gmail.com>
Date: Sun, 10 Jul 2022 21:34:56 +0500
Subject: [PATCH] Use-jchambers-FAST-UUID-methods


diff --git a/pom.xml b/pom.xml
index f88d8bda2342ecbd8d01506c322d3e696adba033..a2f5dc4692acb70b4a8ad6f849709ee711f16c55 100644
--- a/pom.xml
+++ b/pom.xml
@@ -184,6 +184,11 @@
             <artifactId>zstd-jni</artifactId>
             <version>1.5.2-3</version>
         </dependency>
+        <dependency>
+            <groupId>com.eatthepath</groupId>
+            <artifactId>fast-uuid</artifactId>
+            <version>0.2.0</version>
+        </dependency>
     </dependencies>
 
     <repositories>
diff --git a/src/main/java/net/minecraft/server/EntityCreature.java b/src/main/java/net/minecraft/server/EntityCreature.java
index 9659a45efaf24fe83f0cdc12860fe1c15bff9ed4..1fda72717ee485e8de6d529e2989feda5d49863b 100644
--- a/src/main/java/net/minecraft/server/EntityCreature.java
+++ b/src/main/java/net/minecraft/server/EntityCreature.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import java.util.UUID;
 
 // CraftBukkit start
@@ -8,7 +9,7 @@ import org.bukkit.event.entity.EntityUnleashEvent;
 
 public abstract class EntityCreature extends EntityInsentient {
 
-    public static final UUID bv = UUID.fromString("E199AD21-BA8A-4C53-8D13-6182D5C69D3A");
+    public static final UUID bv = FastUUID.parseUUID("E199AD21-BA8A-4C53-8D13-6182D5C69D3A");
     public static final AttributeModifier bw = (new AttributeModifier(EntityCreature.bv, "Fleeing speed bonus", 2.0D, 2)).a(false);
     public BlockPosition movingTarget = null; public BlockPosition getMovingTarget() { return movingTarget; } // Paper
     private BlockPosition a;
diff --git a/src/main/java/net/minecraft/server/EntityEnderman.java b/src/main/java/net/minecraft/server/EntityEnderman.java
index a6d926e60cfef60b7020a56f50ba12c9220a6ae6..319f2dffca7503d11bfca2b70f82bf8cdd58a399 100644
--- a/src/main/java/net/minecraft/server/EntityEnderman.java
+++ b/src/main/java/net/minecraft/server/EntityEnderman.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.destroystokyo.paper.event.entity.EndermanEscapeEvent;
 import com.google.common.base.Function;
 import com.google.common.base.Optional;
@@ -14,7 +15,7 @@ import javax.annotation.Nullable;
 
 public class EntityEnderman extends EntityMonster {
 
-    private static final UUID a = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
+    private static final UUID a = FastUUID.parseUUID("020E0DFB-87AE-4653-9556-831010E291A0");
     private static final AttributeModifier b = (new AttributeModifier(EntityEnderman.a, "Attacking speed boost", 0.15000000596046448D, 0)).a(false);
     private static final Set<Block> c = Sets.newIdentityHashSet();
     private static final DataWatcherObject<Optional<IBlockData>> bx = DataWatcher.a(EntityEnderman.class, DataWatcherRegistry.g);
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 6c59222c77fd7811a8dca26d54ed15f0184ab46f..cabcba7042dfb90ae902fe5a079109eb1c436f3b 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.destroystokyo.paper.event.player.PlayerArmorChangeEvent;
 import com.google.common.base.Objects;
 import com.google.common.collect.Maps;
@@ -39,7 +40,7 @@ import dev.pomf.dionysus.DionysusConfig; // Dionysus
 public abstract class EntityLiving extends Entity {
 
     private static final Logger a = LogManager.getLogger();
-    private static final UUID b = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
+    private static final UUID b = FastUUID.parseUUID("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
     private static final AttributeModifier c = (new AttributeModifier(EntityLiving.b, "Sprinting speed boost", 0.30000001192092896D, 2)).a(false);
     protected static final DataWatcherObject<Byte> at = DataWatcher.a(EntityLiving.class, DataWatcherRegistry.a);
     public static final DataWatcherObject<Float> HEALTH = DataWatcher.a(EntityLiving.class, DataWatcherRegistry.c);
diff --git a/src/main/java/net/minecraft/server/EntityProjectile.java b/src/main/java/net/minecraft/server/EntityProjectile.java
index 7323a0bb6b99e2bb057ccdfd70bfc0857d590be7..5500402fd0a85789cfb8e777a32f06fd0dcca4c0 100644
--- a/src/main/java/net/minecraft/server/EntityProjectile.java
+++ b/src/main/java/net/minecraft/server/EntityProjectile.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import java.util.List;
 import java.util.UUID;
 import javax.annotation.Nullable;
@@ -282,7 +283,7 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
             this.shooter = this.world.a(this.shooterName);
             if (this.shooter == null && this.world instanceof WorldServer) {
                 try {
-                    Entity entity = ((WorldServer) this.world).getEntity(UUID.fromString(this.shooterName));
+                    Entity entity = ((WorldServer) this.world).getEntity(FastUUID.parseUUID(this.shooterName));
 
                     if (entity instanceof EntityLiving) {
                         this.shooter = (EntityLiving) entity;
diff --git a/src/main/java/net/minecraft/server/EntityZombie.java b/src/main/java/net/minecraft/server/EntityZombie.java
index 6111ca0b26c2a88bd56629244712fe7f7cce0db8..914f9988f143f0f73dd18adac6e31b1d0c0cad41 100644
--- a/src/main/java/net/minecraft/server/EntityZombie.java
+++ b/src/main/java/net/minecraft/server/EntityZombie.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import java.util.Calendar;
 import java.util.List;
 import java.util.UUID;
@@ -15,7 +16,7 @@ import org.bukkit.event.entity.EntityTargetEvent;
 public class EntityZombie extends EntityMonster {
 
     protected static final IAttribute a = (new AttributeRanged((IAttribute) null, "zombie.spawnReinforcements", 0.0D, 0.0D, 1.0D)).a("Spawn Reinforcements Chance");
-    private static final UUID b = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
+    private static final UUID b = FastUUID.parseUUID("B9766B59-9566-4402-BC1F-2EE2A276D836");
     private final AttributeModifier c = new AttributeModifier(EntityZombie.b, "Baby speed boost", world.paperConfig.babyZombieMovementSpeed, 1); // Paper - Remove static - Make baby speed configurable
     private static final DataWatcherObject<Boolean> bx = DataWatcher.a(EntityZombie.class, DataWatcherRegistry.h);
     private static final DataWatcherObject<Integer> by = DataWatcher.a(EntityZombie.class, DataWatcherRegistry.b);
diff --git a/src/main/java/net/minecraft/server/GameProfileBanEntry.java b/src/main/java/net/minecraft/server/GameProfileBanEntry.java
index 16fe4819341b97dc889084652387921dfbf41e89..33685974e1462008df47e001e36fcc669575c22f 100644
--- a/src/main/java/net/minecraft/server/GameProfileBanEntry.java
+++ b/src/main/java/net/minecraft/server/GameProfileBanEntry.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.google.gson.JsonObject;
 import com.mojang.authlib.GameProfile;
 import java.util.Date;
@@ -36,7 +37,7 @@ public class GameProfileBanEntry extends ExpirableListEntry<GameProfile> {
             String s = jsonobject.get("uuid").getAsString();
 
             try {
-                uuid = UUID.fromString(s);
+                uuid = FastUUID.parseUUID(s);
             } catch (Throwable throwable) {
             }
 
diff --git a/src/main/java/net/minecraft/server/MobEffectList.java b/src/main/java/net/minecraft/server/MobEffectList.java
index 461fad973a261f9a72aea3976708bd37ce52d18e..995f12301d18eacb31081fb54560146a4614e381 100644
--- a/src/main/java/net/minecraft/server/MobEffectList.java
+++ b/src/main/java/net/minecraft/server/MobEffectList.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.google.common.collect.Maps;
 import java.util.Iterator;
 import java.util.Map;
@@ -150,7 +151,7 @@ public class MobEffectList {
     }
 
     public MobEffectList a(IAttribute iattribute, String s, double d0, int i) {
-        AttributeModifier attributemodifier = new AttributeModifier(UUID.fromString(s), this.a(), d0, i);
+        AttributeModifier attributemodifier = new AttributeModifier(FastUUID.parseUUID(s), this.a(), d0, i);
 
         this.a.put(iattribute, attributemodifier);
         return this;
diff --git a/src/main/java/net/minecraft/server/NameReferencingFileConverter.java b/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
index 8f3b93dc1b269fd07b8bda1e45020722d3411c94..874b74a8190cd3474ad6d469e20a1826cca8de8f 100644
--- a/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
+++ b/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.destroystokyo.paper.exception.ServerInternalException;
 import com.google.common.base.Charsets;
 import com.google.common.base.Predicate;
@@ -338,7 +339,7 @@ public class NameReferencingFileConverter {
                         if (uuid == null) {
                             throw new NameReferencingFileConverter.FileConversionException("Missing UUID for user profile " + gameprofile.getName(), null);
                         } else {
-                            this.a(file, this.a(gameprofile), uuid.toString());
+                            this.a(file, this.a(gameprofile), FastUUID.toString(uuid));
                         }
                     }
 
diff --git a/src/main/java/net/minecraft/server/ServerPing.java b/src/main/java/net/minecraft/server/ServerPing.java
index ac161f5059a43c9b6937cf11f3cf6273472e23c0..d7337fd88c98e832bceee8003a39a7d183492fa2 100644
--- a/src/main/java/net/minecraft/server/ServerPing.java
+++ b/src/main/java/net/minecraft/server/ServerPing.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.google.gson.JsonArray;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
@@ -194,7 +195,7 @@ public class ServerPing {
                             JsonObject jsonobject1 = ChatDeserializer.m(jsonarray.get(i), "player[" + i + "]");
                             String s = ChatDeserializer.h(jsonobject1, "id");
 
-                            agameprofile[i] = new GameProfile(UUID.fromString(s), ChatDeserializer.h(jsonobject1, "name"));
+                            agameprofile[i] = new GameProfile(FastUUID.parseUUID(s), ChatDeserializer.h(jsonobject1, "name"));
                         }
 
                         serverping_serverpingplayersample.a(agameprofile);
@@ -217,7 +218,7 @@ public class ServerPing {
                         JsonObject jsonobject1 = new JsonObject();
                         UUID uuid = serverping_serverpingplayersample.c()[i].getId();
 
-                        jsonobject1.addProperty("id", uuid == null ? "" : uuid.toString());
+                        jsonobject1.addProperty("id", uuid == null ? "" : FastUUID.toString(uuid));
                         jsonobject1.addProperty("name", serverping_serverpingplayersample.c()[i].getName());
                         jsonarray.add(jsonobject1);
                     }
diff --git a/src/main/java/net/minecraft/server/UserCache.java b/src/main/java/net/minecraft/server/UserCache.java
index ecc46a8486bdf5f783fd23307ea8cf8b2e77ad1b..da7a4525f611527eae1be2e60d1afa9933b91c42 100644
--- a/src/main/java/net/minecraft/server/UserCache.java
+++ b/src/main/java/net/minecraft/server/UserCache.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.google.common.collect.Iterators;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -315,7 +316,7 @@ public class UserCache {
             jsonobject.addProperty("name", usercache_usercacheentry.a().getName());
             UUID uuid = usercache_usercacheentry.a().getId();
 
-            jsonobject.addProperty("uuid", uuid == null ? "" : uuid.toString());
+            jsonobject.addProperty("uuid", uuid == null ? "" : FastUUID.toString(uuid));
             jsonobject.addProperty("expiresOn", UserCache.a.format(usercache_usercacheentry.b()));
             return jsonobject;
         }
@@ -344,7 +345,7 @@ public class UserCache {
                         UUID uuid;
 
                         try {
-                            uuid = UUID.fromString(s);
+                            uuid = FastUUID.parseUUID(s);
                         } catch (Throwable throwable) {
                             return null;
                         }
diff --git a/src/main/java/net/minecraft/server/Village.java b/src/main/java/net/minecraft/server/Village.java
index 6536e5fb843fd6e9f28ad975fc73678fafffff47..061102419e0c8670b0a24bec2cde3fadfb3d6d06 100644
--- a/src/main/java/net/minecraft/server/Village.java
+++ b/src/main/java/net/minecraft/server/Village.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.eatthepath.uuid.FastUUID;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.mojang.authlib.GameProfile;
@@ -413,7 +414,7 @@ public class Village {
 
             if (nbttagcompound2.hasKey("UUID") && this.a != null && this.a.getMinecraftServer() != null) {
                 UserCache usercache = this.a.getMinecraftServer().getUserCache();
-                GameProfile gameprofile = usercache.a(UUID.fromString(nbttagcompound2.getString("UUID")));
+                GameProfile gameprofile = usercache.a(FastUUID.parseUUID(nbttagcompound2.getString("UUID")));
 
                 if (gameprofile != null) {
                     this.j.put(gameprofile.getName(), Integer.valueOf(nbttagcompound2.getInt("S")));
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index 45217866bba8f7b8e065da7eca78776f1441dba9..65f66c65e05943b3ee1a54b7ac35392e1e5aa8b9 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit;
 
+import com.eatthepath.uuid.FastUUID;
 import com.mojang.authlib.GameProfile;
 import java.io.File;
 import java.util.LinkedHashMap;
@@ -135,7 +136,7 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
             return Bukkit.getServer().getOfflinePlayer((String) args.get("name"));
         }
 
-        return Bukkit.getServer().getOfflinePlayer(UUID.fromString((String) args.get("UUID")));
+        return Bukkit.getServer().getOfflinePlayer(FastUUID.parseUUID((String) args.get("UUID")));
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 6e13b6d06f0f907fc8b6fb58f354897d29641979..a537b22d19f62087b7f5566d73f76dde747a4f26 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit;
 
+import com.eatthepath.uuid.FastUUID;
 import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.FileInputStream;
@@ -1594,7 +1595,7 @@ public final class CraftServer implements Server {
 
         for (String file : files) {
             try {
-                players.add(getOfflinePlayer(UUID.fromString(file.substring(0, file.length() - 4))));
+                players.add(getOfflinePlayer(FastUUID.parseUUID(file.substring(0, file.length() - 4))));
             } catch (IllegalArgumentException ex) {
                 // Who knows what is in this directory, just ignore invalid files
             }
