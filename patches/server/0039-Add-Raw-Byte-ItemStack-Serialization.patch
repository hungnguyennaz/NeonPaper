From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Softik Lord <dimap9986@gmail.com>
Date: Sat, 9 Jul 2022 20:33:54 +0500
Subject: [PATCH] Add-Raw-Byte-ItemStack-Serialization


diff --git a/src/main/java/net/minecraft/server/NBTCompressedStreamTools.java b/src/main/java/net/minecraft/server/NBTCompressedStreamTools.java
index 7258fff83fe76c7c02dd6b87984710878eee522b..016ee3cc4b2f231bd1a5b1ae1a52fae9ab3c7590 100644
--- a/src/main/java/net/minecraft/server/NBTCompressedStreamTools.java
+++ b/src/main/java/net/minecraft/server/NBTCompressedStreamTools.java
@@ -17,7 +17,7 @@ import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
 
 public class NBTCompressedStreamTools {
-
+    public static NBTTagCompound readNBT(InputStream inputstream) throws IOException { return a(inputstream); } // NeonPaper - OBFHELPER
     public static NBTTagCompound a(InputStream inputstream) throws IOException {
         DataInputStream datainputstream = new DataInputStream(new BufferedInputStream(getCompressionInputStream(inputstream))); // Dionysus
 
@@ -32,6 +32,7 @@ public class NBTCompressedStreamTools {
         return nbttagcompound;
     }
 
+    public static void writeNBT(NBTTagCompound nbttagcompound, OutputStream outputstream) throws IOException { a(nbttagcompound, outputstream); } // NeonPaper - OBFHELPER
     public static void a(NBTTagCompound nbttagcompound, OutputStream outputstream) throws IOException {
         DataOutputStream dataoutputstream = new DataOutputStream(new BufferedOutputStream(getCompressionOutputStream(outputstream))); // Dionysus
 
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
index be90db97e1dc47638b67fc2c6bea88949d46f0ef..d15fbe4cf5bfb18ab22bbbcfbb9c3f16926bc3ab 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
@@ -91,8 +91,8 @@ public final class CraftItemStack extends ItemStack {
         return new CraftItemStack(CraftMagicNumbers.getMaterial(item), amount, (short) 0, null);
     }
 
-    net.minecraft.server.ItemStack handle;
-
+    //net.minecraft.server.ItemStack handle;
+    public net.minecraft.server.ItemStack handle; // NeonPaper - public
     /**
      * Mirror
      */
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index a1be7ec490ccd24ce435ee383287fc0e6b4e7976..ca81dc68519ac618af2ff88343d254ae5d8cf603 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -159,7 +159,35 @@ public final class CraftMagicNumbers implements UnsafeValues {
         }
         return matches;
     }
+    // NeonPasper start
+    @Override
+    public byte[] serializeItem(ItemStack item) {
+        com.google.common.base.Preconditions.checkNotNull(item, "null cannot be serialized");
+        com.google.common.base.Preconditions.checkArgument(item.getType() != Material.AIR, "air cannot be serialized");
+
+        java.io.ByteArrayOutputStream outputStream = new java.io.ByteArrayOutputStream();
+        NBTTagCompound compound = (item instanceof CraftItemStack ? ((CraftItemStack) item).handle : CraftItemStack.asNMSCopy(item)).save(new NBTTagCompound());
+        try {
+            net.minecraft.server.NBTCompressedStreamTools.writeNBT(compound, outputStream);
+        } catch (java.io.IOException ex) {
+            throw new RuntimeException(ex);
+        }
+        return outputStream.toByteArray();
+    }
 
+    @Override
+    public ItemStack deserializeItem(byte[] data) {
+        com.google.common.base.Preconditions.checkNotNull(data, "null cannot be deserialized");
+        com.google.common.base.Preconditions.checkArgument(data.length > 0, "cannot deserialize nothing");
+
+        try {
+            NBTTagCompound compound = net.minecraft.server.NBTCompressedStreamTools.readNBT(new java.io.ByteArrayInputStream(data));
+            return CraftItemStack.asCraftMirror(net.minecraft.server.ItemStack.createStack(compound));
+        } catch (java.io.IOException ex) {
+            throw new RuntimeException(ex);
+        }
+    }
+    // NeonPaper end
     @Override
     public Advancement loadAdvancement(NamespacedKey key, String advancement) {
         if (Bukkit.getAdvancement(key) != null) {
